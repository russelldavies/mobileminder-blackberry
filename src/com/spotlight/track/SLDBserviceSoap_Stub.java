// This class was generated by 172 StubGenerator.
// Contents subject to change without notice.
// @generated

package com.spotlight.track;
import javax.xml.rpc.JAXRPCException;
import javax.xml.namespace.QName;
import javax.microedition.xml.rpc.Operation;
import javax.microedition.xml.rpc.Type;
import javax.microedition.xml.rpc.ComplexType;
import javax.microedition.xml.rpc.Element;

// TODO: Auto-generated Javadoc
/**
 * The Class SLDBserviceSoap_Stub.
 */
public class SLDBserviceSoap_Stub implements com.spotlight.track.SLDBserviceSoap, javax.xml.rpc.Stub {
	
	/** The _property names. */
	private String[] _propertyNames;
	
	/** The _property values. */
	private Object[] _propertyValues;

	/**
	 * Instantiates a new sLD bservice soap_ stub.
	 */
	public SLDBserviceSoap_Stub() {
		_propertyNames = new String[] {ENDPOINT_ADDRESS_PROPERTY};
		_propertyValues = new Object[] {"http://217.115.115.141/SLDBservice.asmx"};
	}

	/**
	 * _set property.
	 *
	 * @param name the name
	 * @param value the value
	 */
	public void _setProperty(String name, Object value) {
		int size = _propertyNames.length;
		for (int i = 0; i < size; ++i) {
			if (_propertyNames[i].equals(name)) {
				_propertyValues[i] = value;
				return;
			}
		}
		// Need to expand our array for a new property
		String[] newPropNames = new String[size + 1];
		System.arraycopy(_propertyNames, 0, newPropNames, 0, size);
		_propertyNames = newPropNames;
		Object[] newPropValues = new Object[size + 1];
		System.arraycopy(_propertyValues, 0, newPropValues, 0, size);
		_propertyValues = newPropValues;

		_propertyNames[size] = name;
		_propertyValues[size] = value;
	}

	/**
	 * _get property.
	 *
	 * @param name the name
	 * @return the object
	 */
	public Object _getProperty(String name) {
		for (int i = 0; i < _propertyNames.length; ++i) {
			if (_propertyNames[i].equals(name)) {
				return _propertyValues[i];
			}
		}
		if (ENDPOINT_ADDRESS_PROPERTY.equals(name) || USERNAME_PROPERTY.equals(name) || PASSWORD_PROPERTY.equals(name)) {
			return null;
		}
		if (SESSION_MAINTAIN_PROPERTY.equals(name)) {
			return new java.lang.Boolean(false);
		}
		throw new JAXRPCException("Stub does not recognize property: "+name);
	}

	/**
	 * _prep operation.
	 *
	 * @param op the op
	 */
	protected void _prepOperation(Operation op) {
		for (int i = 0; i < _propertyNames.length; ++i) {
			op.setProperty(_propertyNames[i], _propertyValues[i].toString());
		}
	}

	// 
	//  Begin user methods
	// 

	/* (non-Javadoc)
	 * @see com.spotlight.track.SLDBserviceSoap#addAction(int, int, boolean, int, java.lang.String, java.lang.String, java.lang.String)
	 */
	public java.lang.String addAction(int employerID, int deviceID, boolean error, int type, java.lang.String timeStamp, java.lang.String status, java.lang.String destinationAddress) throws java.rmi.RemoteException {
		// Copy the incoming values into an Object array if needed.
		Object[] inputObject = new Object[7];
		inputObject[0] = new java.lang.Integer(employerID);
		inputObject[1] = new java.lang.Integer(deviceID);
		inputObject[2] = new java.lang.Boolean(error);
		inputObject[3] = new java.lang.Integer(type);
		inputObject[4] = timeStamp;
		inputObject[5] = status;
		inputObject[6] = destinationAddress;
		
		Operation op = Operation.newInstance(_qname_addAction, _type_addAction, _type_addActionResponse);
		_prepOperation(op);
		op.setProperty(Operation.SOAPACTION_URI_PROPERTY, "http://www.SLDB.net/addAction");
		Object resultObj;
		try {
			resultObj = op.invoke(inputObject);
		} catch (JAXRPCException e) {
			Throwable cause = e.getLinkedCause();
			if (cause instanceof java.rmi.RemoteException) {
				throw (java.rmi.RemoteException) cause;
			}
			throw e;
		}
		java.lang.String result;
		// Convert the result into the right Java type.
		// Unwrapped return value
		Object addActionResultObj = ((Object[])resultObj)[0];
		result = (java.lang.String)addActionResultObj;
		return result;
	}
	// 
	//  End user methods
	// 

	/** The Constant _qname_DestinationAddress. */
	protected static final QName _qname_DestinationAddress = new QName("http://www.SLDB.net/", "DestinationAddress");
	
	/** The Constant _qname_Status. */
	protected static final QName _qname_Status = new QName("http://www.SLDB.net/", "Status");
	
	/** The Constant _qname_TimeStamp. */
	protected static final QName _qname_TimeStamp = new QName("http://www.SLDB.net/", "TimeStamp");
	
	/** The Constant _qname_Type. */
	protected static final QName _qname_Type = new QName("http://www.SLDB.net/", "Type");
	
	/** The Constant _qname_addAction. */
	protected static final QName _qname_addAction = new QName("http://www.SLDB.net/", "addAction");
	
	/** The Constant _qname_addActionResponse. */
	protected static final QName _qname_addActionResponse = new QName("http://www.SLDB.net/", "addActionResponse");
	
	/** The Constant _qname_addActionResult. */
	protected static final QName _qname_addActionResult = new QName("http://www.SLDB.net/", "addActionResult");
	
	/** The Constant _qname_deviceID. */
	protected static final QName _qname_deviceID = new QName("http://www.SLDB.net/", "deviceID");
	
	/** The Constant _qname_employerID. */
	protected static final QName _qname_employerID = new QName("http://www.SLDB.net/", "employerID");
	
	/** The Constant _qname_error. */
	protected static final QName _qname_error = new QName("http://www.SLDB.net/", "error");
	
	/** The Constant _type_addAction. */
	protected static final Element _type_addAction;
	
	/** The Constant _type_addActionResponse. */
	protected static final Element _type_addActionResponse;
	static {
		// Create all of the Type's that this stub uses, once.
		Element _type_employerID;
		_type_employerID = new Element(_qname_employerID, Type.INT);
		Element _type_deviceID;
		_type_deviceID = new Element(_qname_deviceID, Type.INT);
		Element _type_error;
		_type_error = new Element(_qname_error, Type.BOOLEAN);
		Element _type_Type;
		_type_Type = new Element(_qname_Type, Type.INT);
		Element _type_TimeStamp;
		_type_TimeStamp = new Element(_qname_TimeStamp, Type.STRING, 0, 1, false);
		Element _type_Status;
		_type_Status = new Element(_qname_Status, Type.STRING, 0, 1, false);
		Element _type_DestinationAddress;
		_type_DestinationAddress = new Element(_qname_DestinationAddress, Type.STRING, 0, 1, false);
		ComplexType _complexType_addAction;
		_complexType_addAction = new ComplexType();
		_complexType_addAction.elements = new Element[7];
		_complexType_addAction.elements[0] = _type_employerID;
		_complexType_addAction.elements[1] = _type_deviceID;
		_complexType_addAction.elements[2] = _type_error;
		_complexType_addAction.elements[3] = _type_Type;
		_complexType_addAction.elements[4] = _type_TimeStamp;
		_complexType_addAction.elements[5] = _type_Status;
		_complexType_addAction.elements[6] = _type_DestinationAddress;
		_type_addAction = new Element(_qname_addAction, _complexType_addAction);
		Element _type_addActionResult;
		_type_addActionResult = new Element(_qname_addActionResult, Type.STRING, 0, 1, false);
		ComplexType _complexType_addActionResponse;
		_complexType_addActionResponse = new ComplexType();
		_complexType_addActionResponse.elements = new Element[1];
		_complexType_addActionResponse.elements[0] = _type_addActionResult;
		_type_addActionResponse = new Element(_qname_addActionResponse, _complexType_addActionResponse);
	}

}
